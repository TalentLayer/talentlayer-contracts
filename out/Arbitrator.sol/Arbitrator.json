{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IArbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealDecision",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IArbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealPossible",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "contract IArbitrable",
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "DisputeCreation",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appealCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "appealPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "arbitrationCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_choices",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "createDispute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "disputeID",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "currentRuling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ruling",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "disputeStatus",
      "outputs": [
        {
          "internalType": "enum Arbitrator.DisputeStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "appeal(uint256,bytes)": "49912f88",
    "appealCost(uint256,bytes)": "f23f16e6",
    "appealPeriod(uint256)": "afe15cfb",
    "arbitrationCost(bytes)": "f7434ea9",
    "createDispute(uint256,bytes)": "c13517e1",
    "currentRuling(uint256)": "1c3db16d",
    "disputeStatus(uint256)": "10f169e8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealDecision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"AppealPossible\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"contract IArbitrable\",\"name\":\"_arbitrable\",\"type\":\"address\"}],\"name\":\"DisputeCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appeal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"appealCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"appealPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"arbitrationCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_choices\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"createDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"currentRuling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ruling\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_disputeID\",\"type\":\"uint256\"}],\"name\":\"disputeStatus\",\"outputs\":[{\"internalType\":\"enum Arbitrator.DisputeStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Cl\\u00e9ment Lesaege - <clement@lesaege.com>  Arbitrator abstract contract.  When developing arbitrator contracts we need to:  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).  -Define the functions for cost display (arbitrationCost and appealCost).  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling).\",\"events\":{\"AppealDecision(uint256,address)\":{\"details\":\"To be raised when the current ruling is appealed.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}},\"AppealPossible(uint256,address)\":{\"details\":\"To be raised when a dispute can be appealed.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}},\"DisputeCreation(uint256,address)\":{\"details\":\"To be raised when a dispute is created.\",\"params\":{\"_arbitrable\":\"The contract which created the dispute.\",\"_disputeID\":\"ID of the dispute.\"}}},\"kind\":\"dev\",\"methods\":{\"appeal(uint256,bytes)\":{\"details\":\"Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give extra info on the appeal.\"}},\"appealCost(uint256,bytes)\":{\"details\":\"Compute the cost of appeal. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_disputeID\":\"ID of the dispute to be appealed.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"fee\":\"Amount to be paid.\"}},\"appealPeriod(uint256)\":{\"details\":\"Compute the start and end of the dispute's current or next appeal period, if possible.\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"end\":\"The end of the period.\",\"start\":\"The start of the period.\"}},\"arbitrationCost(bytes)\":{\"details\":\"Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\",\"params\":{\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"fee\":\"Amount to be paid.\"}},\"createDispute(uint256,bytes)\":{\"details\":\"Create a dispute. Must be called by the arbitrable contract.  Must be paid at least arbitrationCost(_extraData).\",\"params\":{\"_choices\":\"Amount of choices the arbitrator can make in this dispute.\",\"_extraData\":\"Can be used to give additional info on the dispute to be created.\"},\"returns\":{\"disputeID\":\"ID of the dispute created.\"}},\"currentRuling(uint256)\":{\"details\":\"Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\",\"params\":{\"_disputeID\":\"ID of the dispute.\"},\"returns\":{\"ruling\":\"The ruling which has been given or the one which will be given if there is no appeal.\"}},\"disputeStatus(uint256)\":{\"details\":\"Return the status of a dispute.\",\"params\":{\"_disputeID\":\"ID of the dispute to rule.\"},\"returns\":{\"status\":\"The status of the dispute.\"}}},\"title\":\"Arbitrator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Arbitrator.sol\":\"Arbitrator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"contracts/Arbitrator.sol\":{\"keccak256\":\"0x7f18aba042ddac2117698aa6ea2ab9e52f15e2111bcce93c75dcefc4ca1bd375\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://228b08ec50120f4032e1d63c85629a8f7fcc24c13f526a59fb252b47eecc8a03\",\"dweb:/ipfs/Qmcekkf5tUi97YH8s7vP1o2zzxjLvX7BQUnr3qUpdsd7ZS\"]},\"contracts/interfaces/IArbitrable.sol\":{\"keccak256\":\"0x8c6a21cf093b9eb0bfed937ee6be34cc195b4df29cb73f19b6d1229001543a8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc833b74dca6c72e2ce91d1e261a524e59cf3875e768f4b92e0036858b8e6ce\",\"dweb:/ipfs/QmWyauoinLH8JLVB6ff55jntbBAosGT6yH5R9n6sdJUTB5\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_disputeID",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "contract IArbitrable",
              "name": "_arbitrable",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AppealDecision",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_disputeID",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "contract IArbitrable",
              "name": "_arbitrable",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AppealPossible",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_disputeID",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "contract IArbitrable",
              "name": "_arbitrable",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DisputeCreation",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "appeal"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_disputeID",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "appealCost",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_disputeID",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "appealPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "start",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "end",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "arbitrationCost",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_choices",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createDispute",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "disputeID",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_disputeID",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "currentRuling",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "ruling",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_disputeID",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "disputeStatus",
          "outputs": [
            {
              "internalType": "enum Arbitrator.DisputeStatus",
              "name": "status",
              "type": "uint8"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "appeal(uint256,bytes)": {
            "details": "Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.",
            "params": {
              "_disputeID": "ID of the dispute to be appealed.",
              "_extraData": "Can be used to give extra info on the appeal."
            }
          },
          "appealCost(uint256,bytes)": {
            "details": "Compute the cost of appeal. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.",
            "params": {
              "_disputeID": "ID of the dispute to be appealed.",
              "_extraData": "Can be used to give additional info on the dispute to be created."
            },
            "returns": {
              "fee": "Amount to be paid."
            }
          },
          "appealPeriod(uint256)": {
            "details": "Compute the start and end of the dispute's current or next appeal period, if possible.",
            "params": {
              "_disputeID": "ID of the dispute."
            },
            "returns": {
              "end": "The end of the period.",
              "start": "The start of the period."
            }
          },
          "arbitrationCost(bytes)": {
            "details": "Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.",
            "params": {
              "_extraData": "Can be used to give additional info on the dispute to be created."
            },
            "returns": {
              "fee": "Amount to be paid."
            }
          },
          "createDispute(uint256,bytes)": {
            "details": "Create a dispute. Must be called by the arbitrable contract.  Must be paid at least arbitrationCost(_extraData).",
            "params": {
              "_choices": "Amount of choices the arbitrator can make in this dispute.",
              "_extraData": "Can be used to give additional info on the dispute to be created."
            },
            "returns": {
              "disputeID": "ID of the dispute created."
            }
          },
          "currentRuling(uint256)": {
            "details": "Return the current ruling of a dispute. This is useful for parties to know if they should appeal.",
            "params": {
              "_disputeID": "ID of the dispute."
            },
            "returns": {
              "ruling": "The ruling which has been given or the one which will be given if there is no appeal."
            }
          },
          "disputeStatus(uint256)": {
            "details": "Return the status of a dispute.",
            "params": {
              "_disputeID": "ID of the dispute to rule."
            },
            "returns": {
              "status": "The status of the dispute."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@opengsn/=node_modules/@opengsn/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a/=node_modules/erc721a/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Arbitrator.sol": "Arbitrator"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Arbitrator.sol": {
        "keccak256": "0x7f18aba042ddac2117698aa6ea2ab9e52f15e2111bcce93c75dcefc4ca1bd375",
        "urls": [
          "bzz-raw://228b08ec50120f4032e1d63c85629a8f7fcc24c13f526a59fb252b47eecc8a03",
          "dweb:/ipfs/Qmcekkf5tUi97YH8s7vP1o2zzxjLvX7BQUnr3qUpdsd7ZS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IArbitrable.sol": {
        "keccak256": "0x8c6a21cf093b9eb0bfed937ee6be34cc195b4df29cb73f19b6d1229001543a8f",
        "urls": [
          "bzz-raw://afc833b74dca6c72e2ce91d1e261a524e59cf3875e768f4b92e0036858b8e6ce",
          "dweb:/ipfs/QmWyauoinLH8JLVB6ff55jntbBAosGT6yH5R9n6sdJUTB5"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Arbitrator.sol",
    "id": 176,
    "exportedSymbols": {
      "Arbitrator": [
        175
      ],
      "IArbitrable": [
        7161
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:4917:1",
    "nodes": [
      {
        "id": 27,
        "nodeType": "PragmaDirective",
        "src": "33:23:1",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 29,
        "nodeType": "ImportDirective",
        "src": "60:57:1",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IArbitrable.sol",
        "file": "./interfaces/IArbitrable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 176,
        "sourceUnit": 7162,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28,
              "name": "IArbitrable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7161,
              "src": "68:11:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 175,
        "nodeType": "ContractDefinition",
        "src": "655:4293:1",
        "nodes": [
          {
            "id": 34,
            "nodeType": "EnumDefinition",
            "src": "691:82:1",
            "nodes": [],
            "canonicalName": "Arbitrator.DisputeStatus",
            "members": [
              {
                "id": 31,
                "name": "Waiting",
                "nameLocation": "721:7:1",
                "nodeType": "EnumValue",
                "src": "721:7:1"
              },
              {
                "id": 32,
                "name": "Appealable",
                "nameLocation": "739:10:1",
                "nodeType": "EnumValue",
                "src": "739:10:1"
              },
              {
                "id": 33,
                "name": "Solved",
                "nameLocation": "760:6:1",
                "nodeType": "EnumValue",
                "src": "760:6:1"
              }
            ],
            "name": "DisputeStatus",
            "nameLocation": "696:13:1"
          },
          {
            "id": 50,
            "nodeType": "ModifierDefinition",
            "src": "781:182:1",
            "nodes": [],
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "837:126:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "856:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "860:5:1",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "856:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 42,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36,
                              "src": "885:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 41,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "869:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "869:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "856:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f766572206172626974726174696f6e20636f7374732e",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "898:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        },
                        "value": "Not enough ETH to cover arbitration costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1af5fd889c47f413805f3e7ab28c2126990ca133ff4d9cb5f76335a7c5ca974",
                          "typeString": "literal_string \"Not enough ETH to cover arbitration costs.\""
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "848:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:95:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "848:95:1"
                },
                {
                  "id": 48,
                  "nodeType": "PlaceholderStatement",
                  "src": "954:1:1"
                }
              ]
            },
            "name": "requireArbitrationFee",
            "nameLocation": "790:21:1",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "825:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "812:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "811:25:1"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 69,
            "nodeType": "ModifierDefinition",
            "src": "969:199:1",
            "nodes": [],
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "1040:128:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 57,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1059:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1063:5:1",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1059:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 60,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "1083:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 61,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1095:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 59,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1072:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1072:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1059:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045544820746f20636f7665722061707065616c20636f7374732e",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1108:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48e4504850ba6c91b788fac6bc20c12a8accd4a118f5567e03230e22511612d3",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs.\""
                        },
                        "value": "Not enough ETH to cover appeal costs."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48e4504850ba6c91b788fac6bc20c12a8accd4a118f5567e03230e22511612d3",
                          "typeString": "literal_string \"Not enough ETH to cover appeal costs.\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1051:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:97:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:97:1"
                },
                {
                  "id": 67,
                  "nodeType": "PlaceholderStatement",
                  "src": "1159:1:1"
                }
              ]
            },
            "name": "requireAppealFee",
            "nameLocation": "978:16:1",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "1003:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "995:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "1028:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1015:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "994:45:1"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 77,
            "nodeType": "EventDefinition",
            "src": "1353:83:1",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 70,
              "nodeType": "StructuredDocumentation",
              "src": "1176:171:1",
              "text": "@dev To be raised when a dispute is created.\n  @param _disputeID ID of the dispute.\n  @param _arbitrable The contract which created the dispute."
            },
            "eventSelector": "141dfc18aa6a56fc816f44f0e9e2f1ebc92b15ab167770e17db5b084c10ed995",
            "name": "DisputeCreation",
            "nameLocation": "1359:15:1",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "1391:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "1375:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_arbitrable",
                  "nameLocation": "1423:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "1403:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrable_$7161",
                    "typeString": "contract IArbitrable"
                  },
                  "typeName": {
                    "id": 74,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73,
                      "name": "IArbitrable",
                      "nameLocations": [
                        "1403:11:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7161,
                      "src": "1403:11:1"
                    },
                    "referencedDeclaration": 7161,
                    "src": "1403:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IArbitrable_$7161",
                      "typeString": "contract IArbitrable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1374:61:1"
            }
          },
          {
            "id": 85,
            "nodeType": "EventDefinition",
            "src": "1626:82:1",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 78,
              "nodeType": "StructuredDocumentation",
              "src": "1444:176:1",
              "text": "@dev To be raised when a dispute can be appealed.\n  @param _disputeID ID of the dispute.\n  @param _arbitrable The contract which created the dispute."
            },
            "eventSelector": "a5d41b970d849372be1da1481ffd78d162bfe57a7aa2fe4e5fb73481fa5ac24f",
            "name": "AppealPossible",
            "nameLocation": "1632:14:1",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "1663:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1647:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_arbitrable",
                  "nameLocation": "1695:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85,
                  "src": "1675:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrable_$7161",
                    "typeString": "contract IArbitrable"
                  },
                  "typeName": {
                    "id": 82,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 81,
                      "name": "IArbitrable",
                      "nameLocations": [
                        "1675:11:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7161,
                      "src": "1675:11:1"
                    },
                    "referencedDeclaration": 7161,
                    "src": "1675:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IArbitrable_$7161",
                      "typeString": "contract IArbitrable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1646:61:1"
            }
          },
          {
            "id": 93,
            "nodeType": "EventDefinition",
            "src": "1903:82:1",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 86,
              "nodeType": "StructuredDocumentation",
              "src": "1716:181:1",
              "text": "@dev To be raised when the current ruling is appealed.\n  @param _disputeID ID of the dispute.\n  @param _arbitrable The contract which created the dispute."
            },
            "eventSelector": "9c9b64db9e130f48381bf697abf638e73117dbfbfd7a4484f2da3ba188f4187d",
            "name": "AppealDecision",
            "nameLocation": "1909:14:1",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "1940:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1924:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_arbitrable",
                  "nameLocation": "1972:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1952:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IArbitrable_$7161",
                    "typeString": "contract IArbitrable"
                  },
                  "typeName": {
                    "id": 90,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89,
                      "name": "IArbitrable",
                      "nameLocations": [
                        "1952:11:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7161,
                      "src": "1952:11:1"
                    },
                    "referencedDeclaration": 7161,
                    "src": "1952:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IArbitrable_$7161",
                      "typeString": "contract IArbitrable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1923:61:1"
            }
          },
          {
            "id": 107,
            "nodeType": "FunctionDefinition",
            "src": "2368:178:1",
            "nodes": [],
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "2544:2:1",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 94,
              "nodeType": "StructuredDocumentation",
              "src": "1993:369:1",
              "text": "@dev Create a dispute. Must be called by the arbitrable contract.\n  Must be paid at least arbitrationCost(_extraData).\n  @param _choices Amount of choices the arbitrator can make in this dispute.\n  @param _extraData Can be used to give additional info on the dispute to be created.\n  @return disputeID ID of the dispute created."
            },
            "functionSelector": "c13517e1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 98,
                    "src": "2504:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 102,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100,
                  "name": "requireArbitrationFee",
                  "nameLocations": [
                    "2482:21:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50,
                  "src": "2482:21:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2482:33:1"
              }
            ],
            "name": "createDispute",
            "nameLocation": "2377:13:1",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_choices",
                  "nameLocation": "2409:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2401:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2401:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "2441:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2428:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2428:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2390:68:1"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "disputeID",
                  "nameLocation": "2533:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2525:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2524:19:1"
            },
            "scope": 175,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 115,
            "nodeType": "FunctionDefinition",
            "src": "2890:92:1",
            "nodes": [],
            "documentation": {
              "id": 108,
              "nodeType": "StructuredDocumentation",
              "src": "2554:330:1",
              "text": "@dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n  @param _extraData Can be used to give additional info on the dispute to be created.\n  @return fee Amount to be paid."
            },
            "functionSelector": "f7434ea9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "arbitrationCost",
            "nameLocation": "2899:15:1",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "2928:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2915:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2915:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2914:25:1"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "2977:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2969:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2969:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2968:13:1"
            },
            "scope": 175,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 136,
            "nodeType": "FunctionDefinition",
            "src": "3237:217:1",
            "nodes": [],
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "3379:75:1",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 128,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "3410:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 130,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3434:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3438:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3434:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 129,
                          "name": "IArbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7161,
                          "src": "3422:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IArbitrable_$7161_$",
                            "typeString": "type(contract IArbitrable)"
                          }
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3422:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IArbitrable_$7161",
                          "typeString": "contract IArbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IArbitrable_$7161",
                          "typeString": "contract IArbitrable"
                        }
                      ],
                      "id": 127,
                      "name": "AppealDecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "3395:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_IArbitrable_$7161_$returns$__$",
                        "typeString": "function (uint256,contract IArbitrable)"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "EmitStatement",
                  "src": "3390:56:1"
                }
              ]
            },
            "documentation": {
              "id": 116,
              "nodeType": "StructuredDocumentation",
              "src": "2990:241:1",
              "text": "@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\n  @param _disputeID ID of the dispute to be appealed.\n  @param _extraData Can be used to give extra info on the appeal."
            },
            "functionSelector": "49912f88",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 123,
                    "name": "_disputeID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 118,
                    "src": "3355:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 124,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 120,
                    "src": "3367:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122,
                  "name": "requireAppealFee",
                  "nameLocations": [
                    "3338:16:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69,
                  "src": "3338:16:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3338:40:1"
              }
            ],
            "name": "appeal",
            "nameLocation": "3246:6:1",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "3271:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "3263:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3263:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "3305:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "3292:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3292:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3252:70:1"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3379:0:1"
            },
            "scope": 175,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 146,
            "nodeType": "FunctionDefinition",
            "src": "3854:107:1",
            "nodes": [],
            "documentation": {
              "id": 137,
              "nodeType": "StructuredDocumentation",
              "src": "3462:386:1",
              "text": "@dev Compute the cost of appeal. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\n  @param _disputeID ID of the dispute to be appealed.\n  @param _extraData Can be used to give additional info on the dispute to be created.\n  @return fee Amount to be paid."
            },
            "functionSelector": "f23f16e6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "appealCost",
            "nameLocation": "3863:10:1",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "3882:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "3874:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3874:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "3907:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "3894:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3894:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3873:45:1"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "3956:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "3948:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3948:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3947:13:1"
            },
            "scope": 175,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 157,
            "nodeType": "FunctionDefinition",
            "src": "4217:93:1",
            "nodes": [],
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "4308:2:1",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "3969:242:1",
              "text": "@dev Compute the start and end of the dispute's current or next appeal period, if possible.\n  @param _disputeID ID of the dispute.\n  @return start The start of the period.\n  @return end The end of the period."
            },
            "functionSelector": "afe15cfb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "appealPeriod",
            "nameLocation": "4226:12:1",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "4247:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "4239:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4239:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4238:20:1"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "start",
                  "nameLocation": "4288:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "4280:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4280:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "end",
                  "nameLocation": "4303:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "4295:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4295:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4279:28:1"
            },
            "scope": 175,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 166,
            "nodeType": "FunctionDefinition",
            "src": "4478:94:1",
            "nodes": [],
            "documentation": {
              "id": 158,
              "nodeType": "StructuredDocumentation",
              "src": "4318:154:1",
              "text": "@dev Return the status of a dispute.\n  @param _disputeID ID of the dispute to rule.\n  @return status The status of the dispute."
            },
            "functionSelector": "10f169e8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "disputeStatus",
            "nameLocation": "4487:13:1",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "4509:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "4501:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4500:20:1"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "4564:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "4550:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$34",
                    "typeString": "enum Arbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "id": 163,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 162,
                      "name": "DisputeStatus",
                      "nameLocations": [
                        "4550:13:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34,
                      "src": "4550:13:1"
                    },
                    "referencedDeclaration": 34,
                    "src": "4550:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$34",
                      "typeString": "enum Arbitrator.DisputeStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4549:22:1"
            },
            "scope": 175,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 174,
            "nodeType": "FunctionDefinition",
            "src": "4857:88:1",
            "nodes": [],
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "4580:271:1",
              "text": "@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\n  @param _disputeID ID of the dispute.\n  @return ruling The ruling which has been given or the one which will be given if there is no appeal."
            },
            "functionSelector": "1c3db16d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "currentRuling",
            "nameLocation": "4866:13:1",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "_disputeID",
                  "nameLocation": "4888:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "4880:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4880:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4879:20:1"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "ruling",
                  "nameLocation": "4937:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "4929:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4929:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4928:16:1"
            },
            "scope": 175,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Arbitrator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 30,
          "nodeType": "StructuredDocumentation",
          "src": "121:532:1",
          "text": "@title Arbitrator\n  @author Clément Lesaege - <clement@lesaege.com>\n  Arbitrator abstract contract.\n  When developing arbitrator contracts we need to:\n  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\n  -Define the functions for cost display (arbitrationCost and appealCost).\n  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID, ruling)."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          175
        ],
        "name": "Arbitrator",
        "nameLocation": "673:10:1",
        "scope": 176,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 1
}